if [[ "$OSTYPE" == "darwin"* ]]; then
  # add Homebrew shell completions (must come before sourcing Prezto)
  FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
fi

# source Prezto if present
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# allow bash-style shell completions
autoload -U +X bashcompinit && bashcompinit

# make sure ~/.local/bin is on $PATH
export PATH="$HOME/.local/bin:$PATH"

# required for 256 color tmux terminal
export TERMINFO_DIRS="$HOME/.local/share/terminfo/"

# add the 1Password SSH agent
if [[ "$OSTYPE" == "darwin"* ]]; then
  export SSH_AUTH_SOCK=~/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock
fi

# use bat for cat and man pages if available
if command -v bat >/dev/null; then
  alias cat=bat
  export MANPAGER="sh -c 'col -bx | bat -l man -p --theme=Smyck'"
fi

# use duf instead of df
if command -v duf >/dev/null; then
  alias df='duf'
fi

# use eza instead of ls if available
if command -v eza >/dev/null; then
  alias ls='eza'
  # only add --git if successful
  if $(eza --git) &>/dev/null; then
    alias ls='eza --git'
  fi
fi
alias la='ll -a'

# configure fzf for fuzzy-finding
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# use lazygit for git gui
alias gg='lazygit'

# use htop instead of top
if command -v htop >/dev/null; then
  alias top=htop
fi

# use mise for managing language runtimes
command -v mise >/dev/null && eval "$(mise activate zsh)"

# use lvim or nvim instead of standard vim
if command -v lvim >/dev/null; then
  alias vim=lvim
  EDITOR=lvim
  VISUAL=lvim
elif command -v nvim >/dev/null; then
  alias vim=nvim
  EDITOR=nvim
  VISUAL=nvim
else
  EDITOR=vim
  VISUAL=vim
fi

# configure zoxide
command -v zoxide >/dev/null && eval "$(zoxide init zsh)"

# quick config file edits
ce() {
  vim ~/.config/$1
}
alias se='vim ~/.ssh/config'
alias te='vim ~/.tmux.conf.local'
alias ve='vim ~/.vim/vimrc'
alias ze='vim ~/.zshrc'

# Git aliases that don't exist in Prezto module
alias ga='git add'
alias gap='git add -p'
alias gb='git branch'
alias gba='git branch -a'
alias gc='git commit'
alias gcm='git commit -m'
alias gco='git checkout'
alias gcob='git checkout -b'
alias gd='git diff'
alias gdc='git diff --cached'
alias gf='git fetch'
alias gfo='git fetch origin'
alias gl='git log'
alias glp='git log -p'
alias gp='git push'
alias gpf='git push -f'
alias gpu='git push -u'
alias gr='git rebase'
alias grc='git rebase --continue'
alias gri='git rebase -i'
alias grim='git rebase -i origin/main'
alias gro='git fetch origin && git rebase origin'
alias grom='git fetch origin && git rebase origin/main'
alias grm='git rm'
alias gs='git status'

# jq aliases
alias jqf='jq -r | fzf --tac'
alias jql='jq -C | bat'
alias jqr='jqfzf'


# list all virtualenvs in the current directory
lsenv() {
  ls -a | grep -E "\.\w+env$" --color=never
}

# source a virtualenv
srcenv() {
  source ${1:-.venv}/bin/activate
}

# make a new virtualenv and activate it
mkenv() {
  local venv="${1:-.venv}"
  python3 -m venv $venv && srcenv $venv
}

# remove a virtualenv
rmenv() {
  rm -rf "${1:-.venv}"
}

pypi() {
  open https://www.pypi.org/project/$1
}

# macOS VPN utilities
if [[ "$OSTYPE" == "darwin"* ]]; then
  vpnls() {
    scutil --nc list
  }

  vpnst() {
    scutil --nc status $*
  }

  vpnon() {
    networksetup -connectpppoeservice $*
  }

  vpnoff() {
    networksetup -disconnectpppoeservice $*
  }
fi

zstyle -d ':completion:*' format
zstyle ':completion:*:descriptions' format '[%d]'

# load machine-specific stuff, use (N) glob qualifier to ignore empty match
for file in $HOME/.zsh.d/*(N); do
  source "$file"
done
